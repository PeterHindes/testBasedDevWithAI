--- a/main.go
+++ b/main.go
@@ -178,6 +178,35 @@
 	c.JSON(http.StatusOK, task)
 }
 
+func uncompleteTask(c *gin.Context) {
+	id := c.Param("id")
+	result, err := db.Exec(`UPDATE tasks 
+		SET status = 'pending', completed_at = NULL 
+		WHERE id = ?`, id)
+	
+	if err != nil {
+		c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
+		return
+	}
+
+	rowsAffected, _ := result.RowsAffected()
+	if rowsAffected == 0 {
+		c.JSON(http.StatusNotFound, gin.H{"error": "task not found"})
+		return
+	}
+
+	var task Task
+	err = db.QueryRow("SELECT id, name, start_date, due_date, priority, status, created_at, completed_at FROM tasks WHERE id = ?", id).Scan(
+		&task.ID, &task.Name, &task.StartDate, &task.DueDate, &task.Priority, &task.Status, &task.CreatedAt, &task.CompletedAt,
+	)
+	if err != nil {
+		c.JSON(http.StatusInternalServerError, gin.H{"error": err.Error()})
+		return
+	}
+
+	c.JSON(http.StatusOK, task)
+}
+
 
 func getAnalytics(c *gin.Context) {
 	var task Task